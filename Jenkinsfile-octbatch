node{

try{

  def mavenHome = tool name: 'Maven3.8.5'
  
  echo "The Job Name is: ${env.JOB_NAME}"
  echo "The Build NUmber is: ${env.BUILD_NUMBER}"
  echo "The Node Name is: ${env.NODE_NAME}"
  
  properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), pipelineTriggers([pollSCM('* * * * *')])])
  
//Checkout Code Stage
stage('CheckoutCode'){
sendSlackNotifiction("STARTED")
git branch: 'development', credentialsId: '4ca03b7f-8e21-401a-b5df-7e52f888fa8b', url: 
'https://github.com/Vishwakar12/maven-web-application.git'
}

//Build{
stage('Build'){
sh "${mavenHome}/bin/mvn clean package"
}

    /*
//Execute Sonarqube Report
stage('ExecuteSonarQubeReport'){
sh "${mavenHome}/bin/mvn sonar:sonar"
}

//UploadArtifacts into nexus
stage('UploadArtifactsIntoNexus'){
sh "${mavenHome}/bin/mvn deploy"
}

//Deploy App Into Tomatcat Server
stage('DeployApp'){
sshagent(['c7ede373-19c4-4fbc-ba20-166239c14b24']){
sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.40.115:/opt/apache-tomcat-9.0.68/webapps"
}
}

*/

}//try closing
   catch (e){
   currentBuild.result = "FAILURE"
  } 
   finally{
   sendSlackNotifiction(currentBuild.result) 
  }

}//node closing

//Function for slack notification

def sendSlackNotifiction(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}

   
 
